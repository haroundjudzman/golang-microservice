// Code generated by go-swagger; DO NOT EDIT.

package burgers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haroundjudzman/golang-microservice/sdk/models"
)

// CreateBurgerReader is a Reader for the CreateBurger structure.
type CreateBurgerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateBurgerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateBurgerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateBurgerBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 422:
		result := NewCreateBurgerUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateBurgerOK creates a CreateBurgerOK with default headers values
func NewCreateBurgerOK() *CreateBurgerOK {
	return &CreateBurgerOK{}
}

/* CreateBurgerOK describes a response with status code 200, with default header values.

List of all burgers
*/
type CreateBurgerOK struct {
	Payload []*models.Burger
}

func (o *CreateBurgerOK) Error() string {
	return fmt.Sprintf("[POST /burgers][%d] createBurgerOK  %+v", 200, o.Payload)
}
func (o *CreateBurgerOK) GetPayload() []*models.Burger {
	return o.Payload
}

func (o *CreateBurgerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateBurgerBadRequest creates a CreateBurgerBadRequest with default headers values
func NewCreateBurgerBadRequest() *CreateBurgerBadRequest {
	return &CreateBurgerBadRequest{}
}

/* CreateBurgerBadRequest describes a response with status code 400, with default header values.

Bad request path
*/
type CreateBurgerBadRequest struct {
}

func (o *CreateBurgerBadRequest) Error() string {
	return fmt.Sprintf("[POST /burgers][%d] createBurgerBadRequest ", 400)
}

func (o *CreateBurgerBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateBurgerUnprocessableEntity creates a CreateBurgerUnprocessableEntity with default headers values
func NewCreateBurgerUnprocessableEntity() *CreateBurgerUnprocessableEntity {
	return &CreateBurgerUnprocessableEntity{}
}

/* CreateBurgerUnprocessableEntity describes a response with status code 422, with default header values.

Validation errors
*/
type CreateBurgerUnprocessableEntity struct {
	Payload *models.ValidationError
}

func (o *CreateBurgerUnprocessableEntity) Error() string {
	return fmt.Sprintf("[POST /burgers][%d] createBurgerUnprocessableEntity  %+v", 422, o.Payload)
}
func (o *CreateBurgerUnprocessableEntity) GetPayload() *models.ValidationError {
	return o.Payload
}

func (o *CreateBurgerUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.ValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
