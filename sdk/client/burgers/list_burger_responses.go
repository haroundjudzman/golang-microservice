// Code generated by go-swagger; DO NOT EDIT.

package burgers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/haroundjudzman/golang-microservice/sdk/models"
)

// ListBurgerReader is a Reader for the ListBurger structure.
type ListBurgerReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListBurgerReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListBurgerOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewListBurgerNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewListBurgerInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListBurgerOK creates a ListBurgerOK with default headers values
func NewListBurgerOK() *ListBurgerOK {
	return &ListBurgerOK{}
}

/* ListBurgerOK describes a response with status code 200, with default header values.

List of all burgers
*/
type ListBurgerOK struct {
	Payload []*models.Burger
}

func (o *ListBurgerOK) Error() string {
	return fmt.Sprintf("[GET /burgers/{id}][%d] listBurgerOK  %+v", 200, o.Payload)
}
func (o *ListBurgerOK) GetPayload() []*models.Burger {
	return o.Payload
}

func (o *ListBurgerOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListBurgerNotFound creates a ListBurgerNotFound with default headers values
func NewListBurgerNotFound() *ListBurgerNotFound {
	return &ListBurgerNotFound{}
}

/* ListBurgerNotFound describes a response with status code 404, with default header values.

No matching burger is found
*/
type ListBurgerNotFound struct {
}

func (o *ListBurgerNotFound) Error() string {
	return fmt.Sprintf("[GET /burgers/{id}][%d] listBurgerNotFound ", 404)
}

func (o *ListBurgerNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewListBurgerInternalServerError creates a ListBurgerInternalServerError with default headers values
func NewListBurgerInternalServerError() *ListBurgerInternalServerError {
	return &ListBurgerInternalServerError{}
}

/* ListBurgerInternalServerError describes a response with status code 500, with default header values.

Generic error
*/
type ListBurgerInternalServerError struct {
	Payload *models.GenericError
}

func (o *ListBurgerInternalServerError) Error() string {
	return fmt.Sprintf("[GET /burgers/{id}][%d] listBurgerInternalServerError  %+v", 500, o.Payload)
}
func (o *ListBurgerInternalServerError) GetPayload() *models.GenericError {
	return o.Payload
}

func (o *ListBurgerInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.GenericError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
